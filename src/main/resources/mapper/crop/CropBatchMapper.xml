<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nongxin.terminal.dao.crop.CropBatchMapper">
  <resultMap id="BaseResultMap" type="com.nongxin.terminal.entity.crop.CropBatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="crop_id" jdbcType="INTEGER" property="cropId" />
    <result column="seed_batch_id" jdbcType="INTEGER" property="seedBatchId" />
    <result column="projected_mu_yield" jdbcType="DECIMAL" property="projectedMuYield" />
    <result column="start_year" jdbcType="SMALLINT" property="startYear" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="base_id" jdbcType="INTEGER" property="baseId" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.nongxin.terminal.entity.crop.CropBatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="crop_id" jdbcType="INTEGER" property="cropId" />
    <result column="seed_batch_id" jdbcType="INTEGER" property="seedBatchId" />
    <result column="projected_mu_yield" jdbcType="DECIMAL" property="projectedMuYield" />
    <result column="start_year" jdbcType="SMALLINT" property="startYear" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="base_id" jdbcType="INTEGER" property="baseId" />
    <association property="plantingPlan" column="plan_id" select="com.nongxin.terminal.dao.plant.PlantingPlanMapper.selectByPrimaryKey"/>
    <association property="crop" column="crop_id" select="com.nongxin.terminal.dao.crop.CropMapper.getIdAndNameById"/>
    <association property="seedBatch" column="seed_batch_id" select="com.nongxin.terminal.dao.batch.SeedBatchMapper.getIdAndCodeById"/>
    <association property="baseInfo" column="base_id" select="com.nongxin.terminal.dao.base.BaseInfoMapper.getIdAndName"/>
    <collection property="lotList" column="id" select="com.nongxin.terminal.dao.base.LotMapper.getLotByBatchId"/>
  </resultMap>

  <resultMap id="BaseResultMap3" type="com.nongxin.terminal.entity.crop.CropBatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="crop_id" jdbcType="INTEGER" property="cropId" />
    <association property="crop" column="crop_id" select="com.nongxin.terminal.dao.crop.CropMapper.getIdAndNameById"/>
  </resultMap>

  <resultMap id="BaseResultMap4" type="com.nongxin.terminal.vo.batch.BatchVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="is_establish" jdbcType="VARCHAR" property="isEstablish" />
    <result column="order_status" jdbcType="SMALLINT" property="orderStatus" />
  </resultMap>

  <!-- 经营报表 -->
  <resultMap id="BusinessReportMap" type="com.nongxin.terminal.vo.workorder.BusinessReportVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="start_year" jdbcType="SMALLINT" property="startYear" />
    <result column="human_cost" jdbcType="DECIMAL" property="humanCost" />
    <collection property="deviceCost" column="id" select="com.nongxin.terminal.dao.plant.DeviceActMapper.getBusinessDeviceAct"/>
    <collection property="materielCost" column="id" select="com.nongxin.terminal.dao.plant.MaterialActMapper.getBusinessMaterialAct"/>
    <collection property="userList" column="base_id" select="com.nongxin.terminal.dao.system.UserMapper.getUserByBaseId"/>
    <collection property="harvested" column="id" select="com.nongxin.terminal.dao.crop.HarvestedProductMapper.getHarvestedByBatchId"/>
  </resultMap>

  <resultMap id="RecoveryMap" type="com.nongxin.terminal.entity.crop.CropBatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <association property="crop" column="crop_id" select="com.nongxin.terminal.dao.crop.CropMapper.getIdAndNameById"/>
    <collection property="recoveryList" column="id" select="com.nongxin.terminal.dao.recovery.RecoveryBatchMapper.selectByBatchId"/>
  </resultMap>

  <resultMap id="BaseResultMap5" type="com.nongxin.terminal.vo.lookboard.CropBatchVo">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="batch_name" jdbcType="VARCHAR" property="batchName"></result>
    <collection property="workOrderList" column="id" select="com.nongxin.terminal.dao.plant.WorkOrderMapper.getOrderByCropId"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, batch_name, plan_id, crop_id, seed_batch_id, projected_mu_yield, start_year, 
    status,create_time, start_time, end_time,base_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ddwb_crop_batch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ddwb_crop_batch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.nongxin.terminal.entity.crop.CropBatch" useGeneratedKeys="true">
    insert into ddwb_crop_batch (batch_name, plan_id, crop_id, 
      seed_batch_id, projected_mu_yield, start_year, 
      status,create_time, start_time, end_time,base_id)
    values (#{batchName,jdbcType=VARCHAR}, #{planId,jdbcType=INTEGER}, #{cropId,jdbcType=INTEGER}, 
      #{seedBatchId,jdbcType=INTEGER}, #{projectedMuYield,jdbcType=DECIMAL}, #{startYear,jdbcType=SMALLINT}, 
      #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{baseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.nongxin.terminal.entity.crop.CropBatch" useGeneratedKeys="true">
    insert into ddwb_crop_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchName != null">
        batch_name,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="cropId != null">
        crop_id,
      </if>
      <if test="seedBatchId != null">
        seed_batch_id,
      </if>
      <if test="projectedMuYield != null">
        projected_mu_yield,
      </if>
      <if test="startYear != null">
        start_year,
      </if>
      <if test="status != null">
        status,
      </if>

      create_time,

      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="baseId != null">
        base_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchName != null">
        #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="cropId != null">
        #{cropId,jdbcType=INTEGER},
      </if>
      <if test="seedBatchId != null">
        #{seedBatchId,jdbcType=INTEGER},
      </if>
      <if test="projectedMuYield != null">
        #{projectedMuYield,jdbcType=DECIMAL},
      </if>
      <if test="startYear != null">
        #{startYear,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>

      current_timestamp,

      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="baseId != null">
        #{baseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nongxin.terminal.entity.crop.CropBatch">
    update ddwb_crop_batch
    <set>
      <if test="batchName != null">
        batch_name = #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="cropId != null">
        crop_id = #{cropId,jdbcType=INTEGER},
      </if>
      <if test="seedBatchId != null">
        seed_batch_id = #{seedBatchId,jdbcType=INTEGER},
      </if>
      <if test="projectedMuYield != null">
        projected_mu_yield = #{projectedMuYield,jdbcType=DECIMAL},
      </if>
      <if test="startYear != null">
        start_year = #{startYear,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="baseId != null">
        base_id = #{baseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nongxin.terminal.entity.crop.CropBatch">
    update ddwb_crop_batch
    set batch_name = #{batchName,jdbcType=VARCHAR},
      plan_id = #{planId,jdbcType=INTEGER},
      crop_id = #{cropId,jdbcType=INTEGER},
      seed_batch_id = #{seedBatchId,jdbcType=INTEGER},
      projected_mu_yield = #{projectedMuYield,jdbcType=DECIMAL},
      start_year = #{startYear,jdbcType=SMALLINT},
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      base_id = #{baseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCropBatchList" parameterType="com.nongxin.terminal.entity.crop.CropBatch" resultMap="BaseResultMap2">
    select
    <include refid="Base_Column_List" />
    from ddwb_crop_batch
    <where>
      <if test="batchName != null">
        and position(#{batchName,jdbcType=VARCHAR} in batch_name)
      </if>
      <if test="cropId != null">
        and crop_id = #{cropId,jdbcType=INTEGER}
      </if>
    </where>
    order by create_time desc
  </select>

  <select id="getAllCropBatch" resultMap="BaseResultMap3">
    select id, batch_name, crop_id
    from ddwb_crop_batch
    <where>
      <if test="baseId != null">
        and base_id = #{baseId,jdbcType=INTEGER}
      </if>
      <if test="planId != null">
        and plan_id = #{planId,jdbcType=INTEGER}
      </if>
      <if test="batchName != null">
        and position(#{batchName,jdbcType=VARCHAR} in batch_name)
      </if>
    </where>
  </select>

  <update id="updateStatus">
    update ddwb_crop_batch
    set status = #{status,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getIdAndNameById" resultMap="BaseResultMap">
    select id, batch_name from ddwb_crop_batch
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getBatchVo" resultMap="BaseResultMap4">
    SELECT * FROM (
      SELECT a.id,a.batch_name,
      (
      CASE
      WHEN b.farming_id = #{farming,jdbcType=INTEGER} THEN '是'
      ELSE '否'
      END
      ) is_establish,
      (
      CASE
      WHEN c.farming_id = #{farming,jdbcType=INTEGER} THEN c.`status`
      END
      ) order_status
      FROM ddwb_crop_batch a
      LEFT JOIN ddwb_farming_batch_rel b
      ON a.id = b.batch_id
      left JOIN ddwb_work_order c
      ON c.farming_id = b.farming_id
      LEFT JOIN ddwb_planting_plan d
      ON a.plan_id = d.id
      WHERE d.cal_id =
      (
        SELECT cal_id FROM ddwb_farming_cal_rel
        WHERE farming_id = #{farming,jdbcType=INTEGER}
      )
      and a.status != #{status,jdbcType=SMALLINT}
      <if test="batchName != null">
        and position(#{batchName,jdbcType=VARCHAR} in a.batch_name)
      </if>
      <if test="planId != null">
        and a.plan_id = #{planId,jdbcType=INTEGER}
      </if>
      GROUP BY a.id
    ) a
    <where>
      <if test="isEstablish != null">
        a.is_establish = #{isEstablish,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="getBatchByPlanId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, batch_name from ddwb_crop_batch
    where plan_id = #{planId,jdbcType=INTEGER}
    <if test="startYear != null">
      and start_year = #{startYear,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getBusinessReport" parameterType="com.nongxin.terminal.entity.crop.CropBatch" resultMap="BusinessReportMap">
    SELECT a.id,a.batch_name,a.start_year,SUM(c.act_cal) AS human_cost,d.id AS base_id FROM ddwb_crop_batch a
    LEFT JOIN ddwb_work_order b
    ON b.crop_batch_id = a.id
    LEFT JOIN ddwb_personnel_act c
    ON c.order_id = b.id
    LEFT JOIN ddwb_base_info d
    ON a.base_id = d.id
    <where>
      <if test="cropId != null">
        and a.crop_id = #{cropId,jdbcType=INTEGER}
      </if>
      <if test="baseId != null">
        and a.base_id = #{baseId,jdbcType=INTEGER}
      </if>
      <if test="startYear != null">
        and a.start_year = #{startYear,jdbcType=INTEGER}
      </if>
      and b.status = 4
    </where>
    GROUP BY a.id
    HAVING human_cost IS NOT NULL
  </select>

  <select id="getBatchByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT a.id,a.batch_name FROM ddwb_crop_batch a
    INNER JOIN ddwb_base_info b
    ON a.base_id = b.id
    INNER JOIN ddwb_base_user_rel c
    ON c.base_id = b.id
    WHERE c.user_id = #{uid,jdbcType=INTEGER}
  </select>

  <select id="getBatchByBaseId" parameterType="java.lang.Integer" resultMap="BaseResultMap5">
    select * from ddwb_crop_batch where base_id = #{baseId,jdbcType=INTEGER}
  </select>

  <select id="selectByBaseId" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select id,batch_name batchName from ddwb_crop_batch where base_id = #{baseId,jdbcType=INTEGER}
  </select>

  <select id="selectByRecoveryId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT a.id,a.batch_name FROM ddwb_crop_batch a
    LEFT JOIN ddwb_recovery_batch b
    ON a.id = b.crop_batch_id
    WHERE b.id = #{recoveryId,jdbcType=INTEGER}
  </select>

  <select id="getBatchAndRecovery" resultMap="RecoveryMap">
    SELECT DISTINCT a.id,a.batch_name,a.crop_id FROM ddwb_crop_batch a
    INNER JOIN ddwb_recovery_batch b
    ON a.id = b.crop_batch_id
    <where>
      <if test="batchId != null">
        and a.id = #{batchId,jdbcType=INTEGER}
      </if>
      <if test="startTime != null">
        and b.harvesting_time &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null">
        and b.harvesting_time &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>

  <select id="getCropIdAndCalIdByBatchId" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    SELECT a.crop_id cropId,b.cal_id calId FROM ddwb_crop_batch a
    INNER JOIN ddwb_planting_plan b
    ON a.plan_id = b.id
    where a.id = #{batchId,jdbcType=INTEGER}
  </select>

</mapper>