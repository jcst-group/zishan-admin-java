<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nongxin.terminal.dao.envmonitor.MonitorLackMapper">
  <resultMap id="BaseResultMap" type="com.nongxin.terminal.entity.envmonitor.MonitorLack">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="monitor_time" jdbcType="TIMESTAMP" property="monitorTime" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <collection property="equipmentName" column="equipment_id" select="com.nongxin.terminal.dao.envmonitor.EquipmentMapper.getEquipmentName"/>
    <collection property="baseName" column="equipment_id" select="com.nongxin.terminal.dao.envmonitor.EquipmentMapper.getBaseName"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, content, monitor_time, equipment_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ddwb_monitor_lack
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ddwb_monitor_lack
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.nongxin.terminal.entity.envmonitor.MonitorLack" useGeneratedKeys="true">
    insert into ddwb_monitor_lack (content, monitor_time, equipment_id
      )
    values (#{content,jdbcType=VARCHAR}, #{monitorTime,jdbcType=TIMESTAMP}, #{equipmentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.nongxin.terminal.entity.envmonitor.MonitorLack" useGeneratedKeys="true">
    insert into ddwb_monitor_lack
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="content != null">
        content,
      </if>
      <if test="monitorTime != null">
        monitor_time,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="monitorTime != null">
        #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nongxin.terminal.entity.envmonitor.MonitorLack">
    update ddwb_monitor_lack
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="monitorTime != null">
        monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nongxin.terminal.entity.envmonitor.MonitorLack">
    update ddwb_monitor_lack
    set content = #{content,jdbcType=VARCHAR},
      monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      equipment_id = #{equipmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" resultMap="BaseResultMap">
    select a.* from ddwb_monitor_lack a
    left join ddwb_equipment b on a.equipment_id = b.id
    <where>
      <if test="baseId != null">
        b.base_id = #{baseId,jdbcType=INTEGER}
      </if>
      <if test="equipmentId !=null ">
        a.equipment_id = #{equipmentId,jdbcType=INTEGER}
      </if>
      <if test="startTime != null and endTime != null">
        and a.monitor_time >= #{startTime,jdbcType=TIMESTAMP}
        and date_add(#{endTime,jdbcType=TIMESTAMP},interval 1 day) > a.monitor_time
      </if>
    </where>
    order by a.monitor_time desc
  </select>
</mapper>